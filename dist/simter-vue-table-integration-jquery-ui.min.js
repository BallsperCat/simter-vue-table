/*!
* simter-vue-table-integration-jquery-ui v0.5.0
* @author RJ.Hwang <rongjihuang@gmail.com>
* @license MIT
*/
(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports):typeof define==="function"&&define.amd?define(["exports"],factory):factory(global["simter-vue-table-integration-jquery-ui"]={})})(this,function(exports){"use strict";function isPlainObject(o){return typeof o==="object"&&o!==null&&o.constructor.name==="Object"}const merge=function(target,source,prop){if(!target||!source)return target;Object.keys(source).forEach(key=>{if(target.hasOwnProperty(key)){const t=isPlainObject(target[key]);const s=isPlainObject(source[key]);if(t){if(s)merge(target[key],source[key],prop);else{if(prop)target[key][prop]=source[key];else target[key]=source[key]}}else{if(s){if(prop){const c={};c[prop]=target[key];target[key]=merge(c,source[key],prop)}else target[key]=merge({},source[key],prop)}else target[key]=source[key]}}else{if(isPlainObject(source[key]))target[key]=merge({},source[key],prop);else target[key]=source[key]}});return target};const deepAssign=function(target,...sources){sources.forEach(source=>merge(target,source));return target};const classes={table:["ui-widget-content"],thead:{tr:"st-row",th:"st-cell"}};const cells={"st-cell-text":{component:"st-cell-text"},"st-cell-html":{component:"st-cell-html"},"st-cell-row-picker":{component:"st-cell-row-picker",showContent:false,showRowNumber:false,classes:{input:"ui-widget-content"}},"st-cell-text-editor":{component:"st-cell-text-editor",classes:{input:"ui-widget-content"}},"st-cell-number-editor":{component:"st-cell-number-editor",classes:{input:"ui-widget-content"}}};const cell=function(key,specialConfig){return deepAssign({},cells[key]||{component:key},specialConfig)};exports.classes=classes;exports.cells=cells;exports.cell=cell;Object.defineProperty(exports,"__esModule",{value:true})});
//# sourceMappingURL=true